"""brk2 tenaamstellingen v2.0.0

Revision ID: 2c68f1ae0fe3
Revises: 653c76fc1750
Create Date: 2023-03-08 14:26:31.603791

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2c68f1ae0fe3'
down_revision = '653c76fc1750'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP VIEW IF EXISTS legacy.brk2_stukdelen")
    op.drop_column('brk2_stukdelen', 'begin_geldigheid')
    op.execute("DROP VIEW IF EXISTS legacy.brk2_tenaamstellingen")
    op.add_column('brk2_tenaamstellingen', sa.Column('registratiedatum', sa.DateTime(), autoincrement=False, nullable=True))
    op.execute("ALTER TABLE brk2_tenaamstellingen DROP CONSTRAINT IF EXISTS brk2_tenaamstellingen__id_key CASCADE")
    op.create_unique_constraint('brk2_tenaamstellingen__id_volgnummer_key', 'brk2_tenaamstellingen', ['_id', 'volgnummer'])
    op.execute("DROP MATERIALIZED VIEW IF EXISTS mv_brk2_art_brk2_tng_betrokken_brk_tenaamstelling")
    op.create_foreign_key('rel_brk2_art_brk2_tng_betrokken_brk_tenaamstelling_dfk', 'rel_brk2_art_brk2_tng_betrokken_brk_tenaamstelling', 'brk2_tenaamstellingen', ['dst_id', 'dst_volgnummer'], ['_id', 'volgnummer'])
    op.execute("DROP MATERIALIZED VIEW IF EXISTS mv_brk2_sdl_brk2_tng_is_bron_voor_brk_tenaamstelling")
    op.create_foreign_key('rel_brk2_sdl_brk2_tng_is_bron_voor_brk_tenaamstelling_dfk', 'rel_brk2_sdl_brk2_tng_is_bron_voor_brk_tenaamstelling', 'brk2_tenaamstellingen', ['dst_id', 'dst_volgnummer'], ['_id', 'volgnummer'])
    op.execute("DROP MATERIALIZED VIEW IF EXISTS mv_brk2_tng_brk2_sdl_is_gebaseerd_op_brk_stukdelen")
    op.create_foreign_key('rel_brk2_tng_brk2_sdl_is_gebaseerd_op_brk_stukdelen_sfk', 'rel_brk2_tng_brk2_sdl_is_gebaseerd_op_brk_stukdelen', 'brk2_tenaamstellingen', ['src_id', 'src_volgnummer'], ['_id', 'volgnummer'])
    op.execute("DROP MATERIALIZED VIEW IF EXISTS mv_brk2_tng_brk2_sjt__betr_gorzen_aanwassen_brk_sjt_")
    op.create_foreign_key('rel_brk2_tng_brk2_sjt__betr_gorzen_aanwassen_brk_sjt__sfk', 'rel_brk2_tng_brk2_sjt__betr_gorzen_aanwassen_brk_sjt_', 'brk2_tenaamstellingen', ['src_id', 'src_volgnummer'], ['_id', 'volgnummer'])
    op.execute("DROP MATERIALIZED VIEW IF EXISTS mv_brk2_tng_brk2_sjt__betr_samenwerkverband_brk_sjt_")
    op.create_foreign_key('rel_brk2_tng_brk2_sjt__betr_samenwerkverband_brk_sjt__sfk', 'rel_brk2_tng_brk2_sjt__betr_samenwerkverband_brk_sjt_', 'brk2_tenaamstellingen', ['src_id', 'src_volgnummer'], ['_id', 'volgnummer'])
    op.execute("DROP MATERIALIZED VIEW IF EXISTS mv_brk2_tng_brk2_sjt_betrokken_partner_brk_subject")
    op.create_foreign_key('rel_brk2_tng_brk2_sjt_betrokken_partner_brk_subject_sfk', 'rel_brk2_tng_brk2_sjt_betrokken_partner_brk_subject', 'brk2_tenaamstellingen', ['src_id', 'src_volgnummer'], ['_id', 'volgnummer'])
    op.execute("DROP MATERIALIZED VIEW IF EXISTS mv_brk2_tng_brk2_sjt_van_brk_kadastraalsubject")
    op.create_foreign_key('rel_brk2_tng_brk2_sjt_van_brk_kadastraalsubject_sfk', 'rel_brk2_tng_brk2_sjt_van_brk_kadastraalsubject', 'brk2_tenaamstellingen', ['src_id', 'src_volgnummer'], ['_id', 'volgnummer'])
    op.execute("DROP MATERIALIZED VIEW IF EXISTS mv_brk2_tng_brk2_zrt_van_brk_zakelijk_recht")
    op.create_foreign_key('rel_brk2_tng_brk2_zrt_van_brk_zakelijk_recht_sfk', 'rel_brk2_tng_brk2_zrt_van_brk_zakelijk_recht', 'brk2_tenaamstellingen', ['src_id', 'src_volgnummer'], ['_id', 'volgnummer'])
    op.execute("DROP MATERIALIZED VIEW IF EXISTS mv_brk2_zrt_brk2_tng__is_beperkt_tot_brk_tng_")
    op.create_foreign_key('rel_brk2_zrt_brk2_tng__is_beperkt_tot_brk_tng__dfk', 'rel_brk2_zrt_brk2_tng__is_beperkt_tot_brk_tng_', 'brk2_tenaamstellingen', ['dst_id', 'dst_volgnummer'], ['_id', 'volgnummer'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP VIEW IF EXISTS legacy.brk2_tenaamstellingen")
    op.drop_constraint('rel_brk2_zrt_brk2_tng__is_beperkt_tot_brk_tng__dfk', 'rel_brk2_zrt_brk2_tng__is_beperkt_tot_brk_tng_', type_='foreignkey')
    op.create_foreign_key('rel_brk2_zrt_brk2_tng__is_beperkt_tot_brk_tng__dfk', 'rel_brk2_zrt_brk2_tng__is_beperkt_tot_brk_tng_', 'brk2_tenaamstellingen', ['dst_id'], ['_id'])
    op.drop_constraint('rel_brk2_tng_brk2_zrt_van_brk_zakelijk_recht_sfk', 'rel_brk2_tng_brk2_zrt_van_brk_zakelijk_recht', type_='foreignkey')
    op.create_foreign_key('rel_brk2_tng_brk2_zrt_van_brk_zakelijk_recht_sfk', 'rel_brk2_tng_brk2_zrt_van_brk_zakelijk_recht', 'brk2_tenaamstellingen', ['src_id'], ['_id'])
    op.drop_constraint('rel_brk2_tng_brk2_sjt_van_brk_kadastraalsubject_sfk', 'rel_brk2_tng_brk2_sjt_van_brk_kadastraalsubject', type_='foreignkey')
    op.create_foreign_key('rel_brk2_tng_brk2_sjt_van_brk_kadastraalsubject_sfk', 'rel_brk2_tng_brk2_sjt_van_brk_kadastraalsubject', 'brk2_tenaamstellingen', ['src_id'], ['_id'])
    op.drop_constraint('rel_brk2_tng_brk2_sjt_betrokken_partner_brk_subject_sfk', 'rel_brk2_tng_brk2_sjt_betrokken_partner_brk_subject', type_='foreignkey')
    op.create_foreign_key('rel_brk2_tng_brk2_sjt_betrokken_partner_brk_subject_sfk', 'rel_brk2_tng_brk2_sjt_betrokken_partner_brk_subject', 'brk2_tenaamstellingen', ['src_id'], ['_id'])
    op.drop_constraint('rel_brk2_tng_brk2_sjt__betr_samenwerkverband_brk_sjt__sfk', 'rel_brk2_tng_brk2_sjt__betr_samenwerkverband_brk_sjt_', type_='foreignkey')
    op.create_foreign_key('rel_brk2_tng_brk2_sjt__betr_samenwerkverband_brk_sjt__sfk', 'rel_brk2_tng_brk2_sjt__betr_samenwerkverband_brk_sjt_', 'brk2_tenaamstellingen', ['src_id'], ['_id'])
    op.drop_constraint('rel_brk2_tng_brk2_sjt__betr_gorzen_aanwassen_brk_sjt__sfk', 'rel_brk2_tng_brk2_sjt__betr_gorzen_aanwassen_brk_sjt_', type_='foreignkey')
    op.create_foreign_key('rel_brk2_tng_brk2_sjt__betr_gorzen_aanwassen_brk_sjt__sfk', 'rel_brk2_tng_brk2_sjt__betr_gorzen_aanwassen_brk_sjt_', 'brk2_tenaamstellingen', ['src_id'], ['_id'])
    op.drop_constraint('rel_brk2_tng_brk2_sdl_is_gebaseerd_op_brk_stukdelen_sfk', 'rel_brk2_tng_brk2_sdl_is_gebaseerd_op_brk_stukdelen', type_='foreignkey')
    op.create_foreign_key('rel_brk2_tng_brk2_sdl_is_gebaseerd_op_brk_stukdelen_sfk', 'rel_brk2_tng_brk2_sdl_is_gebaseerd_op_brk_stukdelen', 'brk2_tenaamstellingen', ['src_id'], ['_id'])
    op.drop_constraint('rel_brk2_sdl_brk2_tng_is_bron_voor_brk_tenaamstelling_dfk', 'rel_brk2_sdl_brk2_tng_is_bron_voor_brk_tenaamstelling', type_='foreignkey')
    op.create_foreign_key('rel_brk2_sdl_brk2_tng_is_bron_voor_brk_tenaamstelling_dfk', 'rel_brk2_sdl_brk2_tng_is_bron_voor_brk_tenaamstelling', 'brk2_tenaamstellingen', ['dst_id'], ['_id'])
    op.drop_constraint('rel_brk2_art_brk2_tng_betrokken_brk_tenaamstelling_dfk', 'rel_brk2_art_brk2_tng_betrokken_brk_tenaamstelling', type_='foreignkey')
    op.create_foreign_key('rel_brk2_art_brk2_tng_betrokken_brk_tenaamstelling_dfk', 'rel_brk2_art_brk2_tng_betrokken_brk_tenaamstelling', 'brk2_tenaamstellingen', ['dst_id'], ['_id'])
    op.drop_constraint('brk2_tenaamstellingen__id_volgnummer_key', 'brk2_tenaamstellingen', type_='unique')
    op.create_unique_constraint('brk2_tenaamstellingen__id_key', 'brk2_tenaamstellingen', ['_id'])
    op.drop_column('brk2_tenaamstellingen', 'registratiedatum')
    op.execute("DROP VIEW IF EXISTS legacy.brk2_stukdelen")
    op.add_column('brk2_stukdelen', sa.Column('begin_geldigheid', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    # ### end Alembic commands ###

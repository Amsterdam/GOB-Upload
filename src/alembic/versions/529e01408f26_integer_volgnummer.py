"""integer volgnummer

Revision ID: 529e01408f26
Revises: aa3ac9f5e903
Create Date: 2020-02-28 13:10:52.767671

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision = '529e01408f26'
down_revision = 'aa3ac9f5e903'
branch_labels = None
depends_on = None


def upgrade():
    op.execute("""
DROP FUNCTION IF EXISTS    seqnr_to_int;
CREATE OR REPLACE FUNCTION seqnr_to_int() RETURNS VOID
    LANGUAGE plpgsql
AS
$$
DECLARE
    t record;
BEGIN
    -- Relate tables
    FOR t IN
        SELECT
            *
        FROM
            pg_tables
        WHERE
            schemaname = 'public' AND
            tablename LIKE 'rel_%'
    LOOP
        EXECUTE 'DROP MATERIALIZED VIEW IF EXISTS mv_' || substring(t.tablename from 5) || ' CASCADE';
        EXECUTE 'ALTER TABLE ' || t.tablename ||
                '      DROP CONSTRAINT IF EXISTS ' || t.tablename || '_sfk,' ||
                '      DROP CONSTRAINT IF EXISTS ' || t.tablename || '_dfk';
        EXECUTE 'ALTER TABLE ' || t.tablename ||
                '      ALTER COLUMN src_volgnummer TYPE integer USING (src_volgnummer::integer),' ||
                '      ALTER COLUMN dst_volgnummer TYPE integer USING (dst_volgnummer::integer)';
    END LOOP;

    -- Drop all views
    FOR t IN
        SELECT
            *
        FROM
            pg_views
        WHERE
            schemaname = 'public'          AND
            viewname NOT LIKE 'geography%' AND
            viewname NOT LIKE 'raster%'    AND
            viewname NOT LIKE 'geometry%'
    LOOP
        EXECUTE 'DROP VIEW ' || t.viewname;
    END LOOP;	

    -- Regular tables
    FOR t IN
        SELECT
            *
        FROM
            pg_tables
        LEFT JOIN
            information_schema.columns
        ON
            columns.table_name = pg_tables.tablename
        WHERE
            schemaname = 'public'        AND
            tablename NOT LIKE 'rel_%'   AND
            tablename NOT LIKE 'events%' AND
            column_name='volgnummer'
    LOOP
        EXECUTE 'ALTER TABLE ' || t.tablename ||
                '      ALTER COLUMN volgnummer TYPE integer USING (volgnummer::integer)';
    END LOOP;
END;
$$;
""")

    op.execute("""
SELECT seqnr_to_int();
""")

    # Cleanup
    op.execute("""
DROP FUNCTION seqnr_to_int;
""")

    pass
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###

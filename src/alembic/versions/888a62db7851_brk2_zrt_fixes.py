"""brk2 zrt fixes

Revision ID: 888a62db7851
Revises: a9991678e305
Create Date: 2023-02-23 11:46:00.959727

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '888a62db7851'
down_revision = 'a9991678e305'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('rel_brk2_zrt_brk2_sjt_vve_identificatie_betrokken_bij',
    sa.Column('id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('src_source', sa.String(), autoincrement=False, nullable=True),
    sa.Column('src_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('src_volgnummer', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('bronwaarde', sa.String(), autoincrement=False, nullable=True),
    sa.Column('derivation', sa.String(), autoincrement=False, nullable=True),
    sa.Column('dst_source', sa.String(), autoincrement=False, nullable=True),
    sa.Column('dst_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('dst_volgnummer', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('begin_geldigheid', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('eind_geldigheid', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_last_src_event', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('_last_dst_event', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('_source', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_application', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_source_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_last_event', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('_hash', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_version', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_date_created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_date_confirmed', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_date_modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_date_deleted', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_expiration_date', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_gobid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_tid', sa.String(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dst_id'], ['brk2_kadastralesubjecten._id'], name='rel_brk2_zrt_brk2_sjt_vve_identificatie_betrokken_bij_dfk'),
    sa.ForeignKeyConstraint(['src_id', 'src_volgnummer'], ['brk2_zakelijkerechten._id', 'brk2_zakelijkerechten.volgnummer'], name='rel_brk2_zrt_brk2_sjt_vve_identificatie_betrokken_bij_sfk'),
    sa.PrimaryKeyConstraint('_gobid'),
    sa.UniqueConstraint('_source_id', name='rel_brk2_zrt_brk2_sjt_vve_identificatie_betrokken_bij_uniq'),
    sa.UniqueConstraint('_tid', name='rel_brk2_zrt_brk2_sjt_vve_identificatie_betrokken_bij__tid_key')
    )
    op.create_table('rel_brk2_zrt_brk2_sjt_vve_identificatie_ontstaan_uit',
    sa.Column('id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('src_source', sa.String(), autoincrement=False, nullable=True),
    sa.Column('src_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('src_volgnummer', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('bronwaarde', sa.String(), autoincrement=False, nullable=True),
    sa.Column('derivation', sa.String(), autoincrement=False, nullable=True),
    sa.Column('dst_source', sa.String(), autoincrement=False, nullable=True),
    sa.Column('dst_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('dst_volgnummer', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('begin_geldigheid', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('eind_geldigheid', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_last_src_event', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('_last_dst_event', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('_source', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_application', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_source_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_last_event', sa.Integer(), autoincrement=False, nullable=True),
    sa.Column('_hash', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_version', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_date_created', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_date_confirmed', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_date_modified', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_date_deleted', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_expiration_date', sa.DateTime(), autoincrement=False, nullable=True),
    sa.Column('_gobid', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('_id', sa.String(), autoincrement=False, nullable=True),
    sa.Column('_tid', sa.String(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dst_id'], ['brk2_kadastralesubjecten._id'], name='rel_brk2_zrt_brk2_sjt_vve_identificatie_ontstaan_uit_dfk'),
    sa.ForeignKeyConstraint(['src_id', 'src_volgnummer'], ['brk2_zakelijkerechten._id', 'brk2_zakelijkerechten.volgnummer'], name='rel_brk2_zrt_brk2_sjt_vve_identificatie_ontstaan_uit_sfk'),
    sa.PrimaryKeyConstraint('_gobid'),
    sa.UniqueConstraint('_source_id', name='rel_brk2_zrt_brk2_sjt_vve_identificatie_ontstaan_uit_uniq'),
    sa.UniqueConstraint('_tid', name='rel_brk2_zrt_brk2_sjt_vve_identificatie_ontstaan_uit__tid_key')
    )
    op.execute('DROP TABLE IF EXISTS rel_brk2_zrt_brk2_sjt__ontst_apprechtsplit_vve_ CASCADE')
    op.execute('DROP TABLE IF EXISTS rel_brk2_zrt_brk2_sjt__betr_apprechtsplit_vve_ CASCADE')
    op.execute('DROP VIEW IF EXISTS legacy."brk2_zakelijkerechten"')
    op.drop_column('brk2_zakelijkerechten', 'ontstaan_uit_appartementsrechtsplitsing_vve')
    op.add_column('brk2_zakelijkerechten',
               sa.Column('ontstaan_uit_appartementsrechtsplitsing_vve', type_=sa.String(),
               autoincrement=False, nullable=True))
    op.drop_column('brk2_zakelijkerechten', 'betrokken_bij_appartementsrechtsplitsing_vve')
    op.add_column('brk2_zakelijkerechten',
               sa.Column('betrokken_bij_appartementsrechtsplitsing_vve', type_=sa.String(),
               autoincrement=False, nullable=True))
    op.alter_column('brk2_zakelijkerechten', 'vve_identificatie_ontstaan_uit',
               existing_type=sa.VARCHAR(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='to_jsonb(vve_identificatie_ontstaan_uit)')
    op.alter_column('brk2_zakelijkerechten', 'vve_identificatie_betrokken_bij',
               existing_type=sa.VARCHAR(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='to_jsonb(vve_identificatie_betrokken_bij)')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute('DROP VIEW IF EXISTS legacy."brk2_zakelijkerechten"')
    op.alter_column('brk2_zakelijkerechten', 'vve_identificatie_betrokken_bij',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.VARCHAR(),
               existing_nullable=True,
               postgresql_using='vve_identificatie_betrokken_bij::text')
    op.alter_column('brk2_zakelijkerechten', 'vve_identificatie_ontstaan_uit',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.VARCHAR(),
               existing_nullable=True,
               postgresql_using='vve_identificatie_ontstaan_uit::text')
    op.alter_column('brk2_zakelijkerechten', 'betrokken_bij_appartementsrechtsplitsing_vve',
               existing_type=sa.String(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='to_jsonb(betrokken_bij_appartementsrechtsplitsing_vve)')
    op.alter_column('brk2_zakelijkerechten', 'ontstaan_uit_appartementsrechtsplitsing_vve',
               existing_type=sa.String(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               postgresql_using='to_jsonb(ontstaan_uit_appartementsrechtsplitsing_vve)')
    op.create_table('rel_brk2_zrt_brk2_sjt__betr_apprechtsplit_vve_',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('src_source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('src_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('src_volgnummer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bronwaarde', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('derivation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dst_source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dst_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dst_volgnummer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('begin_geldigheid', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('eind_geldigheid', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_last_src_event', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_last_dst_event', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_application', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_source_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_last_event', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_version', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_date_confirmed', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_date_modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_date_deleted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_expiration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_gobid', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_tid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dst_id'], ['brk2_kadastralesubjecten._id'], name='rel_brk2_zrt_brk2_sjt__betr_apprechtsplit_vve__dfk'),
    sa.ForeignKeyConstraint(['src_id', 'src_volgnummer'], ['brk2_zakelijkerechten._id', 'brk2_zakelijkerechten.volgnummer'], name='rel_brk2_zrt_brk2_sjt__betr_apprechtsplit_vve__sfk'),
    sa.PrimaryKeyConstraint('_gobid', name='rel_brk2_zrt_brk2_sjt__betr_apprechtsplit_vve__pkey'),
    sa.UniqueConstraint('_source_id', name='rel_brk2_zrt_brk2_sjt__betr_apprechtsplit_vve__uniq'),
    sa.UniqueConstraint('_tid', name='rel_brk2_zrt_brk2_sjt__betr_apprechtsplit_vve___tid_key')
    )
    op.create_table('rel_brk2_zrt_brk2_sjt__ontst_apprechtsplit_vve_',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('src_source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('src_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('src_volgnummer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('bronwaarde', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('derivation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dst_source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dst_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dst_volgnummer', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('begin_geldigheid', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('eind_geldigheid', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_last_src_event', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_last_dst_event', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_application', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_source_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_last_event', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('_hash', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_version', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_date_confirmed', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_date_modified', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_date_deleted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_expiration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('_gobid', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('_tid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['dst_id'], ['brk2_kadastralesubjecten._id'], name='rel_brk2_zrt_brk2_sjt__ontst_apprechtsplit_vve__dfk'),
    sa.ForeignKeyConstraint(['src_id', 'src_volgnummer'], ['brk2_zakelijkerechten._id', 'brk2_zakelijkerechten.volgnummer'], name='rel_brk2_zrt_brk2_sjt__ontst_apprechtsplit_vve__sfk'),
    sa.PrimaryKeyConstraint('_gobid', name='rel_brk2_zrt_brk2_sjt__ontst_apprechtsplit_vve__pkey'),
    sa.UniqueConstraint('_source_id', name='rel_brk2_zrt_brk2_sjt__ontst_apprechtsplit_vve__uniq'),
    sa.UniqueConstraint('_tid', name='rel_brk2_zrt_brk2_sjt__ontst_apprechtsplit_vve___tid_key')
    )
    op.drop_table('rel_brk2_zrt_brk2_sjt_vve_identificatie_ontstaan_uit')
    op.drop_table('rel_brk2_zrt_brk2_sjt_vve_identificatie_betrokken_bij')
    # ### end Alembic commands ###
